server.port: 8080
server.error.include-message: always

spring:
  profiles:
    include: domain
  datasource:
    url: jdbc:mysql://localhost:3306/olmago_order
    username: olmago
    password: olmago
    driver-class-name: com.mysql.cj.jdbc.Driver

#  h2:
#    console:
#      enabled: true
#      path: /h2-console

#  datasource:
#    driver-class-name: org.h2.Driver
#    url: jdbc:h2:~/order;
#    username: usr
#    password: pwd
    #data: classpath:data.sql
    #initialization-mode: always        spring 2.5??? ?? ??? data.sql ????.

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        default_batch_fetch_size: 10

spring.cloud.function:
  definition: functionRouter
  routing-expression: headers['message-name']

spring.kafka.bootstrap-servers: 127.0.0.1:9093

spring.cloud.stream:
  defaultBinder: kafka

  kafka:
    binder:
      brokers: 127.0.0.1
      defaultBrokerPort: 9093
      replication-factor: 1

  default.contentType: application/json

  bindings:
    functionRouter-in-0:
      destination: contract-event-topic
      group: order-group
      consumer:
        maxAttempts: 3
        backOffInitialInterval: 500
        backOffMaxInterval: 1000
        backOffMultiplier: 2.0

---
spring.profiles: docker

server.port: 80

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/olmago_order